version: '3'
services:
    mongo:
        image: "mongo"
        restart: always
        # networks: 
        #     - backenddb
        expose: 
            - '27017'
        ports:
            - "27017:27017"

    mysql:
        image: mysql
        command: --default-authentication-plugin=mysql_native_password
        restart: always
        container_name: sql
        environment:
            MYSQL_ROOT_PASSWORD: root
    
    # adminer:
    #     image: adminer
    #     restart: always
    #     container_name: admin
    #     ports:
    #         - 8080:8080
    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: admin
        restart: always
        links:
            - mysql:mysql
        ports:
            - 9191:80
        environment:
            MYSQL_USERNAME: root
            MYSQL_ROOT_PASSWORD: root
            PMA_HOST: mysql

    usermanagement:
        image: usermanagement
        build: ./user
        restart: always
        container_name: usermanagement
        # links: 
            # - "nginx"
        # networks: 
        #     - backend
        #     - backenddb
        expose: 
            - '5001'
        command: "node user.js"
        ports:
            - "5001:5001"
        depends_on:
            - "mongo"
                
    filesever:
        image: fileserver
        build: ./fileServer
        restart: always
        container_name: fileserver
        # networks: 
        #     - backend
        #     - backenddb
        expose: 
            - '5004'
        command: "node fileServer.js"
        ports:
            - "5004:5004"
        depends_on:
            - "mongo"
    client:
        image: client
        build: ./client
        restart: always
        container_name: client
        expose: 
            - '3001'
        command: "npm start"
        ports:
            - "3001:3000"
    # nginx:
    #     build: ./nginx
    #     container_name: nginx   
    #     restart: always
    #     links: 
    #         - "usermanagement"
    #         # - "fileserver"
    #     networks:
    #         - backend
    #     ports: 
    #         - 80:80
        # volumes: 
            # - ./nginx/defualt.conf:/etc/nginx/conf.d/defualt.conf
                # client_frontend:
        #     image: client
        #     build: ./client
        #     command: "npm start"
        #     ports:
        #         - "80:3000"
# networks:
#     backend:
#         driver: bridge
#     backenddb:
#         driver: bridge


    